Name: libvpx
URL: http://www.webmproject.org
Version: v0.9.7p1
License File: source/libvpx/LICENSE

Date: Tuesday August 16 2011
Branch: cayuga
Commit: 20307c70ae96c45b9b00338989b952fb334e4fc9

Description:
Contains the sources used to compile libvpx binaries used by Google Chrome and
Chromium.

The libvpx source is from webmproject.org:
  git://review.webmproject.org/libvpx

Notes on icc (Intel Compiler) builds for linux and mac

The mac libvpx build was built with icc v11.1.  In 
addition to the configuration args listed in vpx_config.c for each target, the
following additions were made to CFLAGS:

- linux/x64 CFLAGS: -fPIC -ffreestanding
- linux ia32 CFLAGS: -ffreestanding
- mac ia32 CFLAGS: -fPIC -ffreestanding -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5

The -ffreestanding argument removes dependencies on Intel memcpy and memset 
functions.

For example, the following could be used at libvpx configure time to reproduce 
the linux x64 build:

CFLAGS="-fPIC -ffreestanding" /path/to/libvpx/configure \
--target=x86_64-linux-icc --enable-pic --disable-install-docs \
--disable-install-srcs --disable-examples --disable-postproc

The vpx_config.{asm,h,cc}, and vpx_version.h files generated by the above
configure command should then be checked in to
source/config/linux/<(target_arch)/.

Notes about libvpx.gyp

To generate the sources list for libvpx.gyp we ran:

  mkdir ++build && cd ++build
  CFLAGS="-fPIC -ffreestanding" bash ../source/libvpx/configure --enable-pic \
    --disable-install-docs --disable-install-srcs --disable-examples \
    --disable-postproc --disable-psnr
  make verbose=true |tee make.out

then trawl through make.out to find the file-names:

  grep '^gcc ' make.out |sed -ne '/^gcc /s/.* \([^ ]*\.c\)$/\1/p'

gives the .c & .h files, and:

  sed -ne 's/.* \([^ ]*\.asm\) .*/\1/p' < make.out

gives the .asm files.
The gcc & yasm flags were also extracted from make.out, similarly by visual
inspection.

Notes on libvpx target on ARM environments

ARM build configuration for GNU toolchain needs vpx_config.{asm,h,c} and
vpx_version.h files as well as whole bunch of converted assember files written
r armv5te, armv6 and neon instruction sets. These files can be
found under following folders:

  source/config/arm       # vpx_config.* for 'armv6-linux-gcc' target,
                          # armv5te, armv6 asm sources.
  source/config/arm-neon  # vpx_config.* for 'armv7-linux-gcc' target,
                          # neon asm sources.

Files were autogenerated by running configure script found in source/libvpx
directory with the following setup under Chrome OS chroot.

Without NEON:
(cros-chroot) $ CROSS=armv7a-cros-linux-gnueabi- \
LDFLAGS=-R/usr/armv7a-cros-linux-gnueabi/lib ./configure \
--target=armv6-linux-gcc --enable-pic --disable-install-docs \
--disable-install-srcs --disable-examples
(cros-chroot) $ make asm_com_offsets.asm asm_enc_offsets_asm vpx_config.asm

With NEON:
(cros-chroot) $ CROSS=armv7a-cros-linux-gnueabi- \
LDFLAGS=-R/usr/armv7a-cros-linux-gnueabi/lib ./configure \
--target=armv7-linux-gcc --enable-pic --disable-install-docs \
--disable-install-srcs --disable-examples
(cros-chroot)$ make asm_com_offsets.asm asm_enc_offsets_asm vpx_config.asm

Script generates the vpx_config.{asm,h,c} and vpx_version files which were then
copied under /source/config/{arm,arm-neon} folders. Script converts also the
assembler source files into GNU assembler compatible format and converted files
were copied with the following commands to the destination:

cp source/libvpx/vp8/common/arm/armv6/*.s \
  source/config/linux/arm/common/armv6
cp source/libvpx/vp8/common/arm/neon/*.s \
  source/config/linux/arm-neon/common/neon
cp source/libvpx/vp8/decoder/arm/armv6/*.s \
  source/config/linux/arm/decoder/armv6
cp source/libvpx/vp8/decoder/arm/neon/*.s \
  source/config/linux/arm-neon/decoder/neon
cp source/libvpx/vp8/encoder/arm/armv5te/*.s \
  source/config/linux/arm/encoder/arm5te
cp source/libvpx/vp8/encoder/arm/armv6/*.s \
  source/config/linux/arm/encoder/armv6
cp source/libvpx/vp8/encoder/arm/neon/*.s \
  source/config/linux/arm-neon/encoder/neon
cp source/libvpx/vpx_scale/arm/neon/*.s \
  source/config/linux/arm-neon/vpx_scale/neon

